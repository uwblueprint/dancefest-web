name: Deploy Dancefest Website by PR
on:
  issue_comment:
    types: [created]
jobs:
  deploy-check:
    runs_on: ubuntu_latest
    environment: dancefest-pr
    steps:
      - name: Acknowledge deployment request
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: "/deploy"
          reaction: rocket
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        outputs:
          triggered: ${{ steps.check.outputs.triggered }}
  deploy:
    runs-on: ubuntu-latest
    needs: deploy-check
    if: needs.deploy-check.outputs.triggered == 'true'
    steps:
      - name: Get Pull Request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:issue_id
          repository: ${{ github.repository }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Deployment from PR
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
          environment: dancefest-pr
          auto_merge: false
        run: echo ${{ fromJson(steps.get_pull_request_ref.outputs.data) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update deployment status to in progress
        id: start_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: dancefest-pr
          environment_url: https://dancefest-pr.herokuapp.com
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'

      - name: Deploy pull request
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.11.10
        with:
          environment: dancefest-pr
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "dancefest-pr"
          heroku_email: "dancefest@uwblueprint.org"
          branch: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}

      - name: Update deployment to success
        id: successful_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: dancefest-pr
          environment_url: https://dancefest-pr.herokuapp.com
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update deployment to failure
        id: failed_deployment
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: dancefest-pr
          environment_url: https://dancefest-pr.herokuapp.com.com
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
