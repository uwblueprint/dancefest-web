{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-clientside-effect';\nimport moveFocusInside, { focusInside, focusIsHidden, getFocusabledIn } from 'focus-lock';\nimport { deferAction } from './util';\n\nvar focusOnBody = function focusOnBody() {\n  return document && document.activeElement === document.body;\n};\n\nvar isFreeFocus = function isFreeFocus() {\n  return focusOnBody() || focusIsHidden();\n};\n\nvar lastActiveTrap = null;\nvar lastActiveFocus = null;\nvar lastPortaledElement = null;\nvar focusWasOutsideWindow = false;\n\nvar defaultWhitelist = function defaultWhitelist() {\n  return true;\n};\n\nvar focusWhitelisted = function focusWhitelisted(activeElement) {\n  return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);\n};\n\nvar recordPortal = function recordPortal(observerNode, portaledElement) {\n  lastPortaledElement = {\n    observerNode: observerNode,\n    portaledElement: portaledElement\n  };\n};\n\nvar focusIsPortaledPair = function focusIsPortaledPair(element) {\n  return lastPortaledElement && lastPortaledElement.portaledElement === element;\n};\n\nfunction autoGuard(startIndex, end, step, allNodes) {\n  var lastGuard = null;\n  var i = startIndex;\n\n  do {\n    var item = allNodes[i];\n\n    if (item.guard) {\n      if (item.node.dataset.focusAutoGuard) {\n        lastGuard = item;\n      }\n    } else if (item.lockItem) {\n      if (i !== startIndex) {\n        // we will tab to the next element\n        return;\n      }\n\n      lastGuard = null;\n    } else {\n      break;\n    }\n  } while ((i += step) !== end);\n\n  if (lastGuard) {\n    lastGuard.node.tabIndex = 0;\n  }\n}\n\nvar extractRef = function extractRef(ref) {\n  return ref && 'current' in ref ? ref.current : ref;\n};\n\nvar activateTrap = function activateTrap() {\n  var result = false;\n\n  if (lastActiveTrap) {\n    var _lastActiveTrap = lastActiveTrap,\n        observed = _lastActiveTrap.observed,\n        persistentFocus = _lastActiveTrap.persistentFocus,\n        autoFocus = _lastActiveTrap.autoFocus,\n        shards = _lastActiveTrap.shards;\n    var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;\n    var activeElement = document && document.activeElement;\n\n    if (workingNode) {\n      var workingArea = [workingNode].concat(shards.map(extractRef).filter(Boolean));\n\n      if (!activeElement || focusWhitelisted(activeElement)) {\n        if (persistentFocus || focusWasOutsideWindow || !isFreeFocus() || !lastActiveFocus && autoFocus) {\n          if (workingNode && !(focusInside(workingArea) || focusIsPortaledPair(activeElement, workingNode))) {\n            if (document && !lastActiveFocus && activeElement && !autoFocus) {\n              activeElement.blur();\n              document.body.focus();\n            } else {\n              result = moveFocusInside(workingArea, lastActiveFocus);\n              lastPortaledElement = {};\n            }\n          }\n\n          focusWasOutsideWindow = false;\n          lastActiveFocus = document && document.activeElement;\n        }\n      }\n\n      if (document) {\n        var newActiveElement = document && document.activeElement;\n        var allNodes = getFocusabledIn(workingArea);\n        var focusedItem = allNodes.find(function (_ref) {\n          var node = _ref.node;\n          return node === newActiveElement;\n        });\n\n        if (focusedItem) {\n          // remove old focus\n          allNodes.filter(function (_ref2) {\n            var guard = _ref2.guard,\n                node = _ref2.node;\n            return guard && node.dataset.focusAutoGuard;\n          }).forEach(function (_ref3) {\n            var node = _ref3.node;\n            return node.removeAttribute('tabIndex');\n          });\n          var focusedIndex = allNodes.indexOf(focusedItem);\n          autoGuard(focusedIndex, allNodes.length, +1, allNodes);\n          autoGuard(focusedIndex, -1, -1, allNodes);\n        }\n      }\n    }\n  }\n\n  return result;\n};\n\nvar onTrap = function onTrap(event) {\n  if (activateTrap() && event) {\n    // prevent scroll jump\n    event.stopPropagation();\n    event.preventDefault();\n  }\n};\n\nexport var onBlur = function onBlur() {\n  return deferAction(activateTrap);\n};\nexport var onFocus = function onFocus(event) {\n  // detect portal\n  var source = event.target;\n  var currentNode = event.currentTarget;\n\n  if (!currentNode.contains(source)) {\n    recordPortal(currentNode, source);\n  }\n};\n\nvar FocusWatcher = function FocusWatcher() {\n  return null;\n};\n\nvar FocusTrap = function FocusTrap(_ref4) {\n  var children = _ref4.children;\n  return React.createElement(\"div\", {\n    onBlur: onBlur,\n    onFocus: onFocus\n  }, children);\n};\n\nFocusTrap.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.node.isRequired\n} : {};\n\nvar onWindowBlur = function onWindowBlur() {\n  focusWasOutsideWindow = true;\n};\n\nvar attachHandler = function attachHandler() {\n  document.addEventListener('focusin', onTrap, true);\n  document.addEventListener('focusout', onBlur);\n  window.addEventListener('blur', onWindowBlur);\n};\n\nvar detachHandler = function detachHandler() {\n  document.removeEventListener('focusin', onTrap, true);\n  document.removeEventListener('focusout', onBlur);\n  window.removeEventListener('blur', onWindowBlur);\n};\n\nfunction reducePropsToState(propsList) {\n  return propsList.filter(function (_ref5) {\n    var disabled = _ref5.disabled;\n    return !disabled;\n  }).slice(-1)[0];\n}\n\nfunction handleStateChangeOnClient(trap) {\n  if (trap && !lastActiveTrap) {\n    attachHandler();\n  }\n\n  var lastTrap = lastActiveTrap;\n  var sameTrap = lastTrap && trap && trap.onActivation === lastTrap.onActivation;\n  lastActiveTrap = trap;\n\n  if (lastTrap && !sameTrap) {\n    lastTrap.onDeactivation();\n  }\n\n  if (trap) {\n    lastActiveFocus = null;\n\n    if (!sameTrap || lastTrap.observed !== trap.observed) {\n      trap.onActivation();\n    }\n\n    activateTrap(true);\n    deferAction(activateTrap);\n  } else {\n    detachHandler();\n    lastActiveFocus = null;\n  }\n}\n\nexport default withSideEffect(reducePropsToState, handleStateChangeOnClient)(FocusWatcher);","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/node_modules/react-focus-lock/dist/es2015/Trap.js"],"names":["React","PropTypes","withSideEffect","moveFocusInside","focusInside","focusIsHidden","getFocusabledIn","deferAction","focusOnBody","document","activeElement","body","isFreeFocus","lastActiveTrap","lastActiveFocus","lastPortaledElement","focusWasOutsideWindow","defaultWhitelist","focusWhitelisted","whiteList","recordPortal","observerNode","portaledElement","focusIsPortaledPair","element","autoGuard","startIndex","end","step","allNodes","lastGuard","i","item","guard","node","dataset","focusAutoGuard","lockItem","tabIndex","extractRef","ref","current","activateTrap","result","_lastActiveTrap","observed","persistentFocus","autoFocus","shards","workingNode","workingArea","concat","map","filter","Boolean","blur","focus","newActiveElement","focusedItem","find","_ref","_ref2","forEach","_ref3","removeAttribute","focusedIndex","indexOf","length","onTrap","event","stopPropagation","preventDefault","onBlur","onFocus","source","target","currentNode","currentTarget","contains","FocusWatcher","FocusTrap","_ref4","children","createElement","propTypes","process","env","NODE_ENV","isRequired","onWindowBlur","attachHandler","addEventListener","window","detachHandler","removeEventListener","reducePropsToState","propsList","_ref5","disabled","slice","handleStateChangeOnClient","trap","lastTrap","sameTrap","onActivation","onDeactivation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-clientside-effect';\nimport moveFocusInside, { focusInside, focusIsHidden, getFocusabledIn } from 'focus-lock';\nimport { deferAction } from './util';\n\nvar focusOnBody = function focusOnBody() {\n  return document && document.activeElement === document.body;\n};\n\nvar isFreeFocus = function isFreeFocus() {\n  return focusOnBody() || focusIsHidden();\n};\n\nvar lastActiveTrap = null;\nvar lastActiveFocus = null;\nvar lastPortaledElement = null;\nvar focusWasOutsideWindow = false;\n\nvar defaultWhitelist = function defaultWhitelist() {\n  return true;\n};\n\nvar focusWhitelisted = function focusWhitelisted(activeElement) {\n  return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);\n};\n\nvar recordPortal = function recordPortal(observerNode, portaledElement) {\n  lastPortaledElement = {\n    observerNode: observerNode,\n    portaledElement: portaledElement\n  };\n};\n\nvar focusIsPortaledPair = function focusIsPortaledPair(element) {\n  return lastPortaledElement && lastPortaledElement.portaledElement === element;\n};\n\nfunction autoGuard(startIndex, end, step, allNodes) {\n  var lastGuard = null;\n  var i = startIndex;\n\n  do {\n    var item = allNodes[i];\n\n    if (item.guard) {\n      if (item.node.dataset.focusAutoGuard) {\n        lastGuard = item;\n      }\n    } else if (item.lockItem) {\n      if (i !== startIndex) {\n        // we will tab to the next element\n        return;\n      }\n\n      lastGuard = null;\n    } else {\n      break;\n    }\n  } while ((i += step) !== end);\n\n  if (lastGuard) {\n    lastGuard.node.tabIndex = 0;\n  }\n}\n\nvar extractRef = function extractRef(ref) {\n  return ref && 'current' in ref ? ref.current : ref;\n};\n\nvar activateTrap = function activateTrap() {\n  var result = false;\n\n  if (lastActiveTrap) {\n    var _lastActiveTrap = lastActiveTrap,\n        observed = _lastActiveTrap.observed,\n        persistentFocus = _lastActiveTrap.persistentFocus,\n        autoFocus = _lastActiveTrap.autoFocus,\n        shards = _lastActiveTrap.shards;\n    var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;\n    var activeElement = document && document.activeElement;\n\n    if (workingNode) {\n      var workingArea = [workingNode].concat(shards.map(extractRef).filter(Boolean));\n\n      if (!activeElement || focusWhitelisted(activeElement)) {\n        if (persistentFocus || focusWasOutsideWindow || !isFreeFocus() || !lastActiveFocus && autoFocus) {\n          if (workingNode && !(focusInside(workingArea) || focusIsPortaledPair(activeElement, workingNode))) {\n            if (document && !lastActiveFocus && activeElement && !autoFocus) {\n              activeElement.blur();\n              document.body.focus();\n            } else {\n              result = moveFocusInside(workingArea, lastActiveFocus);\n              lastPortaledElement = {};\n            }\n          }\n\n          focusWasOutsideWindow = false;\n          lastActiveFocus = document && document.activeElement;\n        }\n      }\n\n      if (document) {\n        var newActiveElement = document && document.activeElement;\n        var allNodes = getFocusabledIn(workingArea);\n        var focusedItem = allNodes.find(function (_ref) {\n          var node = _ref.node;\n          return node === newActiveElement;\n        });\n\n        if (focusedItem) {\n          // remove old focus\n          allNodes.filter(function (_ref2) {\n            var guard = _ref2.guard,\n                node = _ref2.node;\n            return guard && node.dataset.focusAutoGuard;\n          }).forEach(function (_ref3) {\n            var node = _ref3.node;\n            return node.removeAttribute('tabIndex');\n          });\n          var focusedIndex = allNodes.indexOf(focusedItem);\n          autoGuard(focusedIndex, allNodes.length, +1, allNodes);\n          autoGuard(focusedIndex, -1, -1, allNodes);\n        }\n      }\n    }\n  }\n\n  return result;\n};\n\nvar onTrap = function onTrap(event) {\n  if (activateTrap() && event) {\n    // prevent scroll jump\n    event.stopPropagation();\n    event.preventDefault();\n  }\n};\n\nexport var onBlur = function onBlur() {\n  return deferAction(activateTrap);\n};\nexport var onFocus = function onFocus(event) {\n  // detect portal\n  var source = event.target;\n  var currentNode = event.currentTarget;\n\n  if (!currentNode.contains(source)) {\n    recordPortal(currentNode, source);\n  }\n};\n\nvar FocusWatcher = function FocusWatcher() {\n  return null;\n};\n\nvar FocusTrap = function FocusTrap(_ref4) {\n  var children = _ref4.children;\n  return React.createElement(\"div\", {\n    onBlur: onBlur,\n    onFocus: onFocus\n  }, children);\n};\n\nFocusTrap.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.node.isRequired\n} : {};\n\nvar onWindowBlur = function onWindowBlur() {\n  focusWasOutsideWindow = true;\n};\n\nvar attachHandler = function attachHandler() {\n  document.addEventListener('focusin', onTrap, true);\n  document.addEventListener('focusout', onBlur);\n  window.addEventListener('blur', onWindowBlur);\n};\n\nvar detachHandler = function detachHandler() {\n  document.removeEventListener('focusin', onTrap, true);\n  document.removeEventListener('focusout', onBlur);\n  window.removeEventListener('blur', onWindowBlur);\n};\n\nfunction reducePropsToState(propsList) {\n  return propsList.filter(function (_ref5) {\n    var disabled = _ref5.disabled;\n    return !disabled;\n  }).slice(-1)[0];\n}\n\nfunction handleStateChangeOnClient(trap) {\n  if (trap && !lastActiveTrap) {\n    attachHandler();\n  }\n\n  var lastTrap = lastActiveTrap;\n  var sameTrap = lastTrap && trap && trap.onActivation === lastTrap.onActivation;\n  lastActiveTrap = trap;\n\n  if (lastTrap && !sameTrap) {\n    lastTrap.onDeactivation();\n  }\n\n  if (trap) {\n    lastActiveFocus = null;\n\n    if (!sameTrap || lastTrap.observed !== trap.observed) {\n      trap.onActivation();\n    }\n\n    activateTrap(true);\n    deferAction(activateTrap);\n  } else {\n    detachHandler();\n    lastActiveFocus = null;\n  }\n}\n\nexport default withSideEffect(reducePropsToState, handleStateChangeOnClient)(FocusWatcher);"]},"metadata":{},"sourceType":"module"}