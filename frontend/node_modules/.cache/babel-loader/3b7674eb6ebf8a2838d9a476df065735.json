{"ast":null,"code":"var _jsxFileName = \"/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/components/Dropdown.js\";\nimport React from 'react'; // React\n\nimport PropTypes from 'prop-types'; // PropTypes\n\nimport Select, { components } from 'react-select'; // React Select\n\nimport { ReactComponent as ChevronDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/chevron-down.svg\"; // Chevron Down Icon\n\nimport styles from 'styles/components/Dropdown.module.css'; // Component styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownIndicator = props => /*#__PURE__*/_jsxDEV(components.DropdownIndicator, { ...props,\n  children: /*#__PURE__*/_jsxDEV(ChevronDown, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c = DropdownIndicator;\n\nconst Option = props => /*#__PURE__*/_jsxDEV(components.Option, {\n  className: styles.dropdown__option,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 25\n}, this);\n\n_c2 = Option;\nexport default function Dropdown({\n  className,\n  wrapperClassName,\n  isDisabled = false,\n  options,\n  placeholder = 'placeholder',\n  selected,\n  setSelected = () => {}\n}) {\n  // TODO: replace classname for dropdown wrapper\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.dropdown__wrapper} ${wrapperClassName}`,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      components: {\n        DropdownIndicator,\n        IndicatorSeparator: null,\n        Option\n      },\n      className: className,\n      classNamePrefix: \"dropdown\",\n      defaultValue: selected,\n      isDisabled: isDisabled,\n      onChange: setSelected,\n      placeholder: placeholder,\n      options: options,\n      theme: theme => ({ ...theme,\n        colors: { ...theme.colors,\n          primary25: '#f5f6f7'\n        }\n      }),\n      value: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Dropdown;\nDropdown.propTypes = {\n  className: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.any,\n    label: PropTypes.string\n  })),\n  placeholder: PropTypes.string,\n  selected: PropTypes.any.required,\n  setSelected: PropTypes.func.required,\n  wrapperClassName: PropTypes.string\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DropdownIndicator\");\n$RefreshReg$(_c2, \"Option\");\n$RefreshReg$(_c3, \"Dropdown\");","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/components/Dropdown.js"],"names":["React","PropTypes","Select","components","styles","DropdownIndicator","props","Option","dropdown__option","Dropdown","className","wrapperClassName","isDisabled","options","placeholder","selected","setSelected","dropdown__wrapper","IndicatorSeparator","theme","colors","primary25","propTypes","string","bool","arrayOf","shape","value","any","label","required","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AAEpC,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC,C,CAAmD;;6GACsB;;AACzE,OAAOC,MAAP,MAAmB,uCAAnB,C,CAA4D;;;;AAE5D,MAAMC,iBAAiB,GAAGC,KAAK,iBAC7B,QAAC,UAAD,CAAY,iBAAZ,OAAkCA,KAAlC;AAAA,yBACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMD,iB;;AAMN,MAAME,MAAM,GAAGD,KAAK,iBAAI,QAAC,UAAD,CAAY,MAAZ;AAAmB,EAAA,SAAS,EAAEF,MAAM,CAACI,gBAArC;AAAA,KAA2DF;AAA3D;AAAA;AAAA;AAAA;AAAA,QAAxB;;MAAMC,M;AAEN,eAAe,SAASE,QAAT,CAAkB;AAC/BC,EAAAA,SAD+B;AAE/BC,EAAAA,gBAF+B;AAG/BC,EAAAA,UAAU,GAAG,KAHkB;AAI/BC,EAAAA,OAJ+B;AAK/BC,EAAAA,WAAW,GAAG,aALiB;AAM/BC,EAAAA,QAN+B;AAO/BC,EAAAA,WAAW,GAAG,MAAM,CAAE;AAPS,CAAlB,EAQZ;AACD;AACA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEZ,MAAM,CAACa,iBAAkB,IAAGN,gBAAiB,EAAhE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,UAAU,EAAE;AACVN,QAAAA,iBADU;AAEVa,QAAAA,kBAAkB,EAAE,IAFV;AAGVX,QAAAA;AAHU,OADd;AAME,MAAA,SAAS,EAAEG,SANb;AAOE,MAAA,eAAe,EAAC,UAPlB;AAQE,MAAA,YAAY,EAAEK,QARhB;AASE,MAAA,UAAU,EAAEH,UATd;AAUE,MAAA,QAAQ,EAAEI,WAVZ;AAWE,MAAA,WAAW,EAAEF,WAXf;AAYE,MAAA,OAAO,EAAED,OAZX;AAaE,MAAA,KAAK,EAAEM,KAAK,KAAK,EACf,GAAGA,KADY;AAEfC,QAAAA,MAAM,EAAE,EACN,GAAGD,KAAK,CAACC,MADH;AAENC,UAAAA,SAAS,EAAE;AAFL;AAFO,OAAL,CAbd;AAoBE,MAAA,KAAK,EAAEN;AApBT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;MApCuBN,Q;AAsCxBA,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,SAAS,EAAET,SAAS,CAACsB,MADF;AAEnBX,EAAAA,UAAU,EAAEX,SAAS,CAACuB,IAFH;AAGnBX,EAAAA,OAAO,EAAEZ,SAAS,CAACwB,OAAV,CACPxB,SAAS,CAACyB,KAAV,CAAgB;AACdC,IAAAA,KAAK,EAAE1B,SAAS,CAAC2B,GADH;AAEdC,IAAAA,KAAK,EAAE5B,SAAS,CAACsB;AAFH,GAAhB,CADO,CAHU;AASnBT,EAAAA,WAAW,EAAEb,SAAS,CAACsB,MATJ;AAUnBR,EAAAA,QAAQ,EAAEd,SAAS,CAAC2B,GAAV,CAAcE,QAVL;AAWnBd,EAAAA,WAAW,EAAEf,SAAS,CAAC8B,IAAV,CAAeD,QAXT;AAYnBnB,EAAAA,gBAAgB,EAAEV,SAAS,CAACsB;AAZT,CAArB","sourcesContent":["import React from 'react'; // React\nimport PropTypes from 'prop-types'; // PropTypes\n\nimport Select, { components } from 'react-select'; // React Select\nimport { ReactComponent as ChevronDown } from 'assets/chevron-down.svg'; // Chevron Down Icon\nimport styles from 'styles/components/Dropdown.module.css'; // Component styles\n\nconst DropdownIndicator = props => (\n  <components.DropdownIndicator {...props}>\n    <ChevronDown />\n  </components.DropdownIndicator>\n);\n\nconst Option = props => <components.Option className={styles.dropdown__option} {...props} />;\n\nexport default function Dropdown({\n  className,\n  wrapperClassName,\n  isDisabled = false,\n  options,\n  placeholder = 'placeholder',\n  selected,\n  setSelected = () => {},\n}) {\n  // TODO: replace classname for dropdown wrapper\n  return (\n    <div className={`${styles.dropdown__wrapper} ${wrapperClassName}`}>\n      <Select\n        components={{\n          DropdownIndicator,\n          IndicatorSeparator: null,\n          Option,\n        }}\n        className={className}\n        classNamePrefix=\"dropdown\"\n        defaultValue={selected}\n        isDisabled={isDisabled}\n        onChange={setSelected}\n        placeholder={placeholder}\n        options={options}\n        theme={theme => ({\n          ...theme,\n          colors: {\n            ...theme.colors,\n            primary25: '#f5f6f7',\n          },\n        })}\n        value={selected}\n      />\n    </div>\n  );\n}\n\nDropdown.propTypes = {\n  className: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.any,\n      label: PropTypes.string,\n    })\n  ),\n  placeholder: PropTypes.string,\n  selected: PropTypes.any.required,\n  setSelected: PropTypes.func.required,\n  wrapperClassName: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}