{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getTimezoneOffsetInMilliseconds;\nvar MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nfunction getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"],"names":["Object","defineProperty","exports","value","default","getTimezoneOffsetInMilliseconds","MILLISECONDS_IN_MINUTE","getDateMillisecondsPart","date","getTime","dirtyDate","Date","baseTimezoneOffset","Math","ceil","getTimezoneOffset","setSeconds","hasNegativeUTCOffset","millisecondsPartOfTimezoneOffset","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,+BAAlB;AACA,IAAIC,sBAAsB,GAAG,KAA7B;;AAEA,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AACrC,SAAOA,IAAI,CAACC,OAAL,KAAiBH,sBAAxB;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASD,+BAAT,CAAyCK,SAAzC,EAAoD;AAClD,MAAIF,IAAI,GAAG,IAAIG,IAAJ,CAASD,SAAS,CAACD,OAAV,EAAT,CAAX;AACA,MAAIG,kBAAkB,GAAGC,IAAI,CAACC,IAAL,CAAUN,IAAI,CAACO,iBAAL,EAAV,CAAzB;AACAP,EAAAA,IAAI,CAACQ,UAAL,CAAgB,CAAhB,EAAmB,CAAnB;AACA,MAAIC,oBAAoB,GAAGL,kBAAkB,GAAG,CAAhD;AACA,MAAIM,gCAAgC,GAAGD,oBAAoB,GAAG,CAACX,sBAAsB,GAAGC,uBAAuB,CAACC,IAAD,CAAjD,IAA2DF,sBAA9D,GAAuFC,uBAAuB,CAACC,IAAD,CAAzK;AACA,SAAOI,kBAAkB,GAAGN,sBAArB,GAA8CY,gCAArD;AACD;;AAEDC,MAAM,CAACjB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getTimezoneOffsetInMilliseconds;\nvar MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nfunction getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}