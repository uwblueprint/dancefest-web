{"ast":null,"code":"// ideally this would be fetched from ../constants but that causes a\n// circular dep loop. This will be refactored as part of a breaking\n// change in the future.\nvar DEFAULT_THEME_MODE = 'light';\nvar THEME_MODES = ['light', 'dark']; // Resolves the different types of theme objects in the current API\n\nexport default function getTheme(props) {\n  if (props && props.theme) {\n    // Theme is the global Atlaskit theme\n    if ('__ATLASKIT_THEME__' in props.theme) {\n      return props.theme.__ATLASKIT_THEME__;\n    } // User has provided alternative modes\n    else if ('mode' in props.theme && THEME_MODES.includes(props.theme.mode)) {\n        return props.theme;\n      }\n  } // If format not supported (or no theme provided), return standard theme\n\n\n  return {\n    mode: DEFAULT_THEME_MODE\n  };\n}","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/node_modules/@atlaskit/theme/dist/esm/utils/getTheme.js"],"names":["DEFAULT_THEME_MODE","THEME_MODES","getTheme","props","theme","__ATLASKIT_THEME__","includes","mode"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,kBAAkB,GAAG,OAAzB;AACA,IAAIC,WAAW,GAAG,CAAC,OAAD,EAAU,MAAV,CAAlB,C,CAAqC;;AAErC,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAIA,KAAK,IAAIA,KAAK,CAACC,KAAnB,EAA0B;AACxB;AACA,QAAI,wBAAwBD,KAAK,CAACC,KAAlC,EAAyC;AACvC,aAAOD,KAAK,CAACC,KAAN,CAAYC,kBAAnB;AACD,KAFD,CAEE;AAFF,SAGK,IAAI,UAAUF,KAAK,CAACC,KAAhB,IAAyBH,WAAW,CAACK,QAAZ,CAAqBH,KAAK,CAACC,KAAN,CAAYG,IAAjC,CAA7B,EAAqE;AACtE,eAAOJ,KAAK,CAACC,KAAb;AACD;AACJ,GATqC,CASpC;;;AAGF,SAAO;AACLG,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD","sourcesContent":["// ideally this would be fetched from ../constants but that causes a\n// circular dep loop. This will be refactored as part of a breaking\n// change in the future.\nvar DEFAULT_THEME_MODE = 'light';\nvar THEME_MODES = ['light', 'dark']; // Resolves the different types of theme objects in the current API\n\nexport default function getTheme(props) {\n  if (props && props.theme) {\n    // Theme is the global Atlaskit theme\n    if ('__ATLASKIT_THEME__' in props.theme) {\n      return props.theme.__ATLASKIT_THEME__;\n    } // User has provided alternative modes\n    else if ('mode' in props.theme && THEME_MODES.includes(props.theme.mode)) {\n        return props.theme;\n      }\n  } // If format not supported (or no theme provided), return standard theme\n\n\n  return {\n    mode: DEFAULT_THEME_MODE\n  };\n}"]},"metadata":{},"sourceType":"module"}