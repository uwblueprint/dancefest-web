{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n                  fill: none;\\n                  stroke: \", \";\\n                  stroke-width: 1.5;\\n                  stroke-linecap: round;\\n                  stroke-dasharray: 60;\\n                  stroke-dashoffset: inherit;\\n                  transform-origin: center;\\n                  animation: \", \" 0.86s infinite;\\n                  animation-delay: \", \"ms;\\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\\n                \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n                /* align better inline with text */\\n                vertical-align: middle;\\n                /* We are going to animate this in */\\n                opacity: 0;\\n\\n                animation: \", \" 1s ease-in-out;\\n                /* When the animation completes, stay at the last frame of the animation */\\n                animation-fill-mode: forwards;\\n                animation-delay: \", \"ms;\\n              \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  from {\\n    transform: rotate(50deg);\\n    opacity: 0;\\n    stroke-dashoffset: 60;\\n  }\\n  to {\\n    transform: rotate(230deg);\\n    opacity: 1;\\n    stroke-dashoffset: 50;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  to { transform: rotate(360deg); }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/** @jsx jsx */\n\n\nimport React from 'react';\nimport { css, jsx, keyframes } from '@emotion/core';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\nvar rotate = keyframes(_templateObject()); // There are three parts to the load in animation:\n// 1. Fade in\n// 2. Accelerated spin\n// 3. Stretch the spinner line\n\nvar loadIn = keyframes(_templateObject2());\n\nfunction getStrokeColor(_ref) {\n  var mode = _ref.mode,\n      appearance = _ref.appearance;\n\n  if (mode === 'light') {\n    return appearance === 'inherit' ? N500 : N0;\n  } // Dark mode: colours provided by Jake Miller\n\n\n  return appearance === 'inherit' ? DN900 : DN500;\n}\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Spinner(_ref2, ref) {\n  var testId = _ref2.testId,\n      _ref2$appearance = _ref2.appearance,\n      appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,\n      _ref2$delay = _ref2.delay,\n      delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n      _ref2$size = _ref2.size,\n      providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  return jsx(GlobalTheme.Consumer, null, function (tokens) {\n    var strokeColor = getStrokeColor({\n      mode: tokens.mode,\n      appearance: appearance\n    }); // The Spinner animation uses a combination of two\n    // css animations on two separate elements.\n\n    return jsx(\"svg\", {\n      focusable: \"false\",\n      height: size,\n      width: size,\n      viewBox: \"0 0 16 16\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"data-testid\": testId,\n      ref: ref,\n      css: css(_templateObject3(), loadIn, delay)\n    }, jsx(\"circle\", {\n      cx: \"8\",\n      cy: \"8\",\n      r: \"7\",\n      css: css(_templateObject4(), strokeColor, rotate, delay)\n    }));\n  });\n}));","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/node_modules/@atlaskit/spinner/dist/esm/spinner.js"],"names":["_taggedTemplateLiteral","_templateObject4","data","_templateObject3","_templateObject2","_templateObject","React","css","jsx","keyframes","DN500","DN900","N0","N500","GlobalTheme","presetSizes","rotate","loadIn","getStrokeColor","_ref","mode","appearance","memo","forwardRef","Spinner","_ref2","ref","testId","_ref2$appearance","_ref2$delay","delay","_ref2$size","size","providedSize","Consumer","tokens","strokeColor","focusable","height","width","viewBox","xmlns","cx","cy","r"],"mappings":"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","sourcesContent":["import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n                  fill: none;\\n                  stroke: \", \";\\n                  stroke-width: 1.5;\\n                  stroke-linecap: round;\\n                  stroke-dasharray: 60;\\n                  stroke-dashoffset: inherit;\\n                  transform-origin: center;\\n                  animation: \", \" 0.86s infinite;\\n                  animation-delay: \", \"ms;\\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\\n                \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n                /* align better inline with text */\\n                vertical-align: middle;\\n                /* We are going to animate this in */\\n                opacity: 0;\\n\\n                animation: \", \" 1s ease-in-out;\\n                /* When the animation completes, stay at the last frame of the animation */\\n                animation-fill-mode: forwards;\\n                animation-delay: \", \"ms;\\n              \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  from {\\n    transform: rotate(50deg);\\n    opacity: 0;\\n    stroke-dashoffset: 60;\\n  }\\n  to {\\n    transform: rotate(230deg);\\n    opacity: 1;\\n    stroke-dashoffset: 50;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  to { transform: rotate(360deg); }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx, keyframes } from '@emotion/core';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\nvar rotate = keyframes(_templateObject()); // There are three parts to the load in animation:\n// 1. Fade in\n// 2. Accelerated spin\n// 3. Stretch the spinner line\n\nvar loadIn = keyframes(_templateObject2());\n\nfunction getStrokeColor(_ref) {\n  var mode = _ref.mode,\n      appearance = _ref.appearance;\n\n  if (mode === 'light') {\n    return appearance === 'inherit' ? N500 : N0;\n  } // Dark mode: colours provided by Jake Miller\n\n\n  return appearance === 'inherit' ? DN900 : DN500;\n}\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Spinner(_ref2, ref) {\n  var testId = _ref2.testId,\n      _ref2$appearance = _ref2.appearance,\n      appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,\n      _ref2$delay = _ref2.delay,\n      delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n      _ref2$size = _ref2.size,\n      providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  return jsx(GlobalTheme.Consumer, null, function (tokens) {\n    var strokeColor = getStrokeColor({\n      mode: tokens.mode,\n      appearance: appearance\n    }); // The Spinner animation uses a combination of two\n    // css animations on two separate elements.\n\n    return jsx(\"svg\", {\n      focusable: \"false\",\n      height: size,\n      width: size,\n      viewBox: \"0 0 16 16\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"data-testid\": testId,\n      ref: ref,\n      css: css(_templateObject3(), loadIn, delay)\n    }, jsx(\"circle\", {\n      cx: \"8\",\n      cy: \"8\",\n      r: \"7\",\n      css: css(_templateObject4(), strokeColor, rotate, delay)\n    }));\n  });\n}));"]},"metadata":{},"sourceType":"module"}