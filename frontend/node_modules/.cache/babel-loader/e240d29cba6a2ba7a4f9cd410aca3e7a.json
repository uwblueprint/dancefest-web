{"ast":null,"code":"function abort(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar tabKeyCode = 9;\n\nfunction onKey(event) {\n  // Allowing tab so that a user can move focus away\n  if (event.keyCode === tabKeyCode) {\n    return;\n  }\n\n  abort(event);\n}\n\nvar block = {\n  onMouseDownCapture: abort,\n  onMouseUpCapture: abort,\n  // because we have tabIndex = -1 when disabled,\n  // keyboard events can only occur when there is an overlay\n  onKeyDownCapture: onKey,\n  onKeyUpCapture: onKey,\n  onTouchStartCapture: abort,\n  onTouchEndCapture: abort,\n  onPointerDownCapture: abort,\n  onPointerUpCapture: abort,\n  onClickCapture: abort,\n  // Just smashing the existing onClick for good measure\n  onClick: abort\n};\nvar doNotBlock = {};\nexport default function blockEvents(_ref) {\n  var isInteractive = _ref.isInteractive;\n  return isInteractive ? doNotBlock : block;\n}","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/node_modules/@atlaskit/button/dist/esm/shared/block-events.js"],"names":["abort","event","preventDefault","stopPropagation","tabKeyCode","onKey","keyCode","block","onMouseDownCapture","onMouseUpCapture","onKeyDownCapture","onKeyUpCapture","onTouchStartCapture","onTouchEndCapture","onPointerDownCapture","onPointerUpCapture","onClickCapture","onClick","doNotBlock","blockEvents","_ref","isInteractive"],"mappings":"AAAA,SAASA,KAAT,CAAeC,KAAf,EAAsB;AACpBA,EAAAA,KAAK,CAACC,cAAN;AACAD,EAAAA,KAAK,CAACE,eAAN;AACD;;AAED,IAAIC,UAAU,GAAG,CAAjB;;AAEA,SAASC,KAAT,CAAeJ,KAAf,EAAsB;AACpB;AACA,MAAIA,KAAK,CAACK,OAAN,KAAkBF,UAAtB,EAAkC;AAChC;AACD;;AAEDJ,EAAAA,KAAK,CAACC,KAAD,CAAL;AACD;;AAED,IAAIM,KAAK,GAAG;AACVC,EAAAA,kBAAkB,EAAER,KADV;AAEVS,EAAAA,gBAAgB,EAAET,KAFR;AAGV;AACA;AACAU,EAAAA,gBAAgB,EAAEL,KALR;AAMVM,EAAAA,cAAc,EAAEN,KANN;AAOVO,EAAAA,mBAAmB,EAAEZ,KAPX;AAQVa,EAAAA,iBAAiB,EAAEb,KART;AASVc,EAAAA,oBAAoB,EAAEd,KATZ;AAUVe,EAAAA,kBAAkB,EAAEf,KAVV;AAWVgB,EAAAA,cAAc,EAAEhB,KAXN;AAYV;AACAiB,EAAAA,OAAO,EAAEjB;AAbC,CAAZ;AAeA,IAAIkB,UAAU,GAAG,EAAjB;AACA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACxC,MAAIC,aAAa,GAAGD,IAAI,CAACC,aAAzB;AACA,SAAOA,aAAa,GAAGH,UAAH,GAAgBX,KAApC;AACD","sourcesContent":["function abort(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar tabKeyCode = 9;\n\nfunction onKey(event) {\n  // Allowing tab so that a user can move focus away\n  if (event.keyCode === tabKeyCode) {\n    return;\n  }\n\n  abort(event);\n}\n\nvar block = {\n  onMouseDownCapture: abort,\n  onMouseUpCapture: abort,\n  // because we have tabIndex = -1 when disabled,\n  // keyboard events can only occur when there is an overlay\n  onKeyDownCapture: onKey,\n  onKeyUpCapture: onKey,\n  onTouchStartCapture: abort,\n  onTouchEndCapture: abort,\n  onPointerDownCapture: abort,\n  onPointerUpCapture: abort,\n  onClickCapture: abort,\n  // Just smashing the existing onClick for good measure\n  onClick: abort\n};\nvar doNotBlock = {};\nexport default function blockEvents(_ref) {\n  var isInteractive = _ref.isInteractive;\n  return isInteractive ? doNotBlock : block;\n}"]},"metadata":{},"sourceType":"module"}