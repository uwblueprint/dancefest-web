{"ast":null,"code":"var _jsxFileName = \"/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/components/FilterDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react'; // React\n\nimport PropTypes from 'prop-types'; // PropTypes\n\nimport Button from 'components/Button'; // Button\n\nimport { ReactComponent as ChevronDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/chevron-down.svg\"; // Chevron Down Icon\n\nimport { ReactComponent as Checkmark } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/checkmark.svg\"; // Checkmark Icon\n\nimport styles from 'styles/components/FilterDropdown.module.css'; // Component styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OPTIONS = {\n  jazz: {\n    label: 'Jazz',\n    selected: false\n  },\n  lyrical: {\n    label: 'Lyrical',\n    selected: false\n  },\n  ballet: {\n    label: 'Ballet',\n    selected: false\n  }\n};\nexport default function FilterDropdown({\n  buttonText = 'button',\n  options = OPTIONS,\n  setOptions\n}) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n\n  const handleButtonClick = () => setOpen(!open);\n\n  const toggleOption = useCallback(option => () => setOptions(options => ({ ...options,\n    [option]: { ...options[option],\n      selected: !options[option].selected\n    }\n  })), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.filterDropdown__wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${styles.filterDropdown__button} ${open && styles.filterDropdown__buttonOpen}`,\n      onClick: handleButtonClick,\n      children: [buttonText, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.filterDropdown__button_iconWrapper,\n        children: /*#__PURE__*/_jsxDEV(ChevronDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filterDropdown__options,\n      children: [Object.keys(options).map((option, i) => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          className: styles.filterDropdown__option,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: toggleOption(option),\n            children: /*#__PURE__*/_jsxDEV(Checkmark, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: options[option].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.filterDropdown__clearFilterButton,\n        variant: \"contained\",\n        children: \"Clear Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilterDropdown, \"xCavISV/61Dtf8DmXwdZE+rPrhU=\");\n\n_c = FilterDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterDropdown\");","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/components/FilterDropdown.js"],"names":["React","useState","useCallback","PropTypes","Button","styles","OPTIONS","jazz","label","selected","lyrical","ballet","FilterDropdown","buttonText","options","setOptions","open","setOpen","handleButtonClick","toggleOption","option","filterDropdown__wrapper","filterDropdown__button","filterDropdown__buttonOpen","filterDropdown__button_iconWrapper","filterDropdown__options","Object","keys","map","i","filterDropdown__option","name","filterDropdown__clearFilterButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C,C,CAAsD;;AACtD,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AAEpC,OAAOC,MAAP,MAAmB,mBAAnB,C,CAAwC;;6GACiC;;wGACL;;AACpE,OAAOC,MAAP,MAAmB,6CAAnB,C,CAAkE;;;AAElE,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADQ;AAKdC,EAAAA,OAAO,EAAE;AACPF,IAAAA,KAAK,EAAE,SADA;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GALK;AASdE,EAAAA,MAAM,EAAE;AACNH,IAAAA,KAAK,EAAE,QADD;AAENC,IAAAA,QAAQ,EAAE;AAFJ;AATM,CAAhB;AAeA,eAAe,SAASG,cAAT,CAAwB;AAAEC,EAAAA,UAAU,GAAG,QAAf;AAAyBC,EAAAA,OAAO,GAAGR,OAAnC;AAA4CS,EAAAA;AAA5C,CAAxB,EAAkF;AAAA;;AAC/F,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMiB,iBAAiB,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAF,CAAvC;;AAEA,QAAMG,YAAY,GAAGjB,WAAW,CAC9BkB,MAAM,IAAI,MACRL,UAAU,CAACD,OAAO,KAAK,EACrB,GAAGA,OADkB;AAErB,KAACM,MAAD,GAAU,EACR,GAAGN,OAAO,CAACM,MAAD,CADF;AAERX,MAAAA,QAAQ,EAAE,CAACK,OAAO,CAACM,MAAD,CAAP,CAAgBX;AAFnB;AAFW,GAAL,CAAR,CAFkB,EAS9B,EAT8B,CAAhC;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACgB,uBAAvB;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,GAAEhB,MAAM,CAACiB,sBAAuB,IAAGN,IAAI,IAAIX,MAAM,CAACkB,0BAA2B,EAD3F;AAEE,MAAA,OAAO,EAAEL,iBAFX;AAAA,iBAIGL,UAJH,eAKE;AAAM,QAAA,SAAS,EAAER,MAAM,CAACmB,kCAAxB;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGR,IAAI,iBACH;AAAK,MAAA,SAAS,EAAEX,MAAM,CAACoB,uBAAvB;AAAA,iBACGC,MAAM,CAACC,IAAP,CAAYb,OAAZ,EAAqBc,GAArB,CAAyB,CAACR,MAAD,EAASS,CAAT,KAAe;AACvC;AAAA;AAAa,UAAA,SAAS,EAAExB,MAAM,CAACyB,sBAA/B;AAAA,kCACE;AAAK,YAAA,OAAO,EAAEX,YAAY,CAACC,MAAD,CAA1B;AAAA,mCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBAAMN,OAAO,CAACM,MAAD,CAAP,CAAgBW;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAUF,CAAV;AAAA;AAAA;AAAA;AAAA;AAMD,OAPA,CADH,eASE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAExB,MAAM,CAAC2B,iCAA1B;AAA6D,QAAA,OAAO,EAAC,WAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA7CuBpB,c;;KAAAA,c","sourcesContent":["import React, { useState, useCallback } from 'react'; // React\nimport PropTypes from 'prop-types'; // PropTypes\n\nimport Button from 'components/Button'; // Button\nimport { ReactComponent as ChevronDown } from 'assets/chevron-down.svg'; // Chevron Down Icon\nimport { ReactComponent as Checkmark } from 'assets/checkmark.svg'; // Checkmark Icon\nimport styles from 'styles/components/FilterDropdown.module.css'; // Component styles\n\nconst OPTIONS = {\n  jazz: {\n    label: 'Jazz',\n    selected: false,\n  },\n  lyrical: {\n    label: 'Lyrical',\n    selected: false,\n  },\n  ballet: {\n    label: 'Ballet',\n    selected: false,\n  },\n};\n\nexport default function FilterDropdown({ buttonText = 'button', options = OPTIONS, setOptions }) {\n  const [open, setOpen] = useState(false);\n\n  const handleButtonClick = () => setOpen(!open);\n\n  const toggleOption = useCallback(\n    option => () =>\n      setOptions(options => ({\n        ...options,\n        [option]: {\n          ...options[option],\n          selected: !options[option].selected,\n        },\n      })),\n    []\n  );\n\n  return (\n    <div className={styles.filterDropdown__wrapper}>\n      <button\n        className={`${styles.filterDropdown__button} ${open && styles.filterDropdown__buttonOpen}`}\n        onClick={handleButtonClick}\n      >\n        {buttonText}\n        <span className={styles.filterDropdown__button_iconWrapper}>\n          <ChevronDown />\n        </span>\n      </button>\n      {open && (\n        <div className={styles.filterDropdown__options}>\n          {Object.keys(options).map((option, i) => {\n            <div key={i} className={styles.filterDropdown__option}>\n              <div onClick={toggleOption(option)}>\n                <Checkmark />\n              </div>\n              <div>{options[option].name}</div>\n            </div>;\n          })}\n          <Button className={styles.filterDropdown__clearFilterButton} variant=\"contained\">\n            Clear Filter\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}