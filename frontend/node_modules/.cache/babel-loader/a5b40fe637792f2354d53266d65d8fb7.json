{"ast":null,"code":"var _jsxFileName = \"/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/components/FilterDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react'; // React\n\nimport PropTypes from 'prop-types'; // PropTypes\n\nimport Button from 'components/Button'; // Button\n\nimport { ReactComponent as ChevronDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/chevron-down.svg\"; // Chevron Down Icon\n\nimport { ReactComponent as Checkmark } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/checkmark.svg\"; // Checkmark Icon\n\nimport styles from 'styles/components/FilterDropdown.module.css'; // Component styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilterDropdown({\n  buttonText = 'button',\n  options = {},\n  setOptions\n}) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n\n  const handleButtonClick = () => setOpen(!open);\n\n  const toggleOption = useCallback(option => () => setOptions(options => ({ ...options,\n    [option]: { ...options[option],\n      selected: !options[option].selected\n    }\n  })), []);\n\n  const Options = () => {\n    return Object.keys(options).map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filterDropdown__option,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleOption(option),\n        children: /*#__PURE__*/_jsxDEV(Checkmark, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: options[option].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.filterDropdown__wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${styles.filterDropdown__button} ${open && styles.filterDropdown__buttonOpen}`,\n      onClick: handleButtonClick,\n      children: [buttonText, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.filterDropdown__button_iconWrapper,\n        children: /*#__PURE__*/_jsxDEV(ChevronDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filterDropdown__options,\n      children: [/*#__PURE__*/_jsxDEV(Options, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.filterDropdown__clearFilterButton,\n        variant: \"contained\",\n        children: \"Clear Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilterDropdown, \"xCavISV/61Dtf8DmXwdZE+rPrhU=\");\n\n_c = FilterDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterDropdown\");","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/components/FilterDropdown.js"],"names":["React","useState","useCallback","PropTypes","Button","styles","FilterDropdown","buttonText","options","setOptions","open","setOpen","handleButtonClick","toggleOption","option","selected","Options","Object","keys","map","i","filterDropdown__option","label","filterDropdown__wrapper","filterDropdown__button","filterDropdown__buttonOpen","filterDropdown__button_iconWrapper","filterDropdown__options","filterDropdown__clearFilterButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C,C,CAAsD;;AACtD,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AAEpC,OAAOC,MAAP,MAAmB,mBAAnB,C,CAAwC;;6GACiC;;wGACL;;AACpE,OAAOC,MAAP,MAAmB,6CAAnB,C,CAAkE;;;AAElE,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA,UAAU,GAAG,QAAf;AAAyBC,EAAAA,OAAO,GAAG,EAAnC;AAAuCC,EAAAA;AAAvC,CAAxB,EAA6E;AAAA;;AAC1F,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMW,iBAAiB,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAF,CAAvC;;AAEA,QAAMG,YAAY,GAAGX,WAAW,CAC9BY,MAAM,IAAI,MACRL,UAAU,CAACD,OAAO,KAAK,EACrB,GAAGA,OADkB;AAErB,KAACM,MAAD,GAAU,EACR,GAAGN,OAAO,CAACM,MAAD,CADF;AAERC,MAAAA,QAAQ,EAAE,CAACP,OAAO,CAACM,MAAD,CAAP,CAAgBC;AAFnB;AAFW,GAAL,CAAR,CAFkB,EAS9B,EAT8B,CAAhC;;AAYA,QAAMC,OAAO,GAAG,MAAM;AACpB,WAAOC,MAAM,CAACC,IAAP,CAAYV,OAAZ,EAAqBW,GAArB,CAAyB,CAACL,MAAD,EAASM,CAAT,kBAC9B;AAAa,MAAA,SAAS,EAAEf,MAAM,CAACgB,sBAA/B;AAAA,8BACE;AAAK,QAAA,OAAO,EAAER,YAAY,CAACC,MAAD,CAA1B;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBAAMN,OAAO,CAACM,MAAD,CAAP,CAAgBQ;AAAtB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAQD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACkB,uBAAvB;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,GAAElB,MAAM,CAACmB,sBAAuB,IAAGd,IAAI,IAAIL,MAAM,CAACoB,0BAA2B,EAD3F;AAEE,MAAA,OAAO,EAAEb,iBAFX;AAAA,iBAIGL,UAJH,eAKE;AAAM,QAAA,SAAS,EAAEF,MAAM,CAACqB,kCAAxB;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGhB,IAAI,iBACH;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACsB,uBAAvB;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEtB,MAAM,CAACuB,iCAA1B;AAA6D,QAAA,OAAO,EAAC,WAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAjDuBtB,c;;KAAAA,c","sourcesContent":["import React, { useState, useCallback } from 'react'; // React\nimport PropTypes from 'prop-types'; // PropTypes\n\nimport Button from 'components/Button'; // Button\nimport { ReactComponent as ChevronDown } from 'assets/chevron-down.svg'; // Chevron Down Icon\nimport { ReactComponent as Checkmark } from 'assets/checkmark.svg'; // Checkmark Icon\nimport styles from 'styles/components/FilterDropdown.module.css'; // Component styles\n\nexport default function FilterDropdown({ buttonText = 'button', options = {}, setOptions }) {\n  const [open, setOpen] = useState(false);\n\n  const handleButtonClick = () => setOpen(!open);\n\n  const toggleOption = useCallback(\n    option => () =>\n      setOptions(options => ({\n        ...options,\n        [option]: {\n          ...options[option],\n          selected: !options[option].selected,\n        },\n      })),\n    []\n  );\n\n  const Options = () => {\n    return Object.keys(options).map((option, i) => (\n      <div key={i} className={styles.filterDropdown__option}>\n        <div onClick={toggleOption(option)}>\n          <Checkmark />\n        </div>\n        <div>{options[option].label}</div>\n      </div>\n    ));\n  };\n\n  return (\n    <div className={styles.filterDropdown__wrapper}>\n      <button\n        className={`${styles.filterDropdown__button} ${open && styles.filterDropdown__buttonOpen}`}\n        onClick={handleButtonClick}\n      >\n        {buttonText}\n        <span className={styles.filterDropdown__button_iconWrapper}>\n          <ChevronDown />\n        </span>\n      </button>\n      {open && (\n        <div className={styles.filterDropdown__options}>\n          <Options />\n          <Button className={styles.filterDropdown__clearFilterButton} variant=\"contained\">\n            Clear Filter\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}