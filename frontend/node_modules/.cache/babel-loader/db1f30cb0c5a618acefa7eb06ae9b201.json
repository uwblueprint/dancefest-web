{"ast":null,"code":"var _jsxFileName = \"/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/pages/Performances.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // React\n\nimport Layout from 'components/Layout'; // Layout wrapper\n\nimport Button from 'components/Button'; // Button\n\nimport Title from 'components/Title'; // Title\n\nimport Input from 'components/Input'; // Input\n\nimport Tabs from 'components/Tabs'; // Tabs\n\nimport Modal from 'components/Modal'; // Modal\n\nimport { ReactComponent as BackArrow } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/back-arrow.svg\"; // Back arrow icon\n\nimport { ReactComponent as Search } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/search.svg\"; // Search icon\n\nimport { ReactComponent as ChevronDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/chevron-down.svg\"; // Chevron down icon\n\nimport styles from 'styles/pages/Performances.module.css'; // Page styles\n// Page: Performances\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Performances() {\n  _s();\n\n  const [newPerformanceModalOpen, setNewPerformanceModalOpen] = useState(false);\n  const [editPerformanceModalOpen, setEditPerformanceModalOpen] = useState(false); // const entryContent = <Table></Table>;\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.performances__navigation,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: styles.performances__navigation__button,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(BackArrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), \"Back to Events\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.performances__navigation__eventName,\n          children: `OSSDF2021- Let's Dis-dance`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.performances__header,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          className: styles.performances__header__pageTitle,\n          children: \"Performances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: styles.performances__header__search,\n          placeholder: \"Search\",\n          icon: Search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.performances__header__filtersButton,\n          variant: \"outlined\",\n          children: [\"Filters\", /*#__PURE__*/_jsxDEV(ChevronDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Add Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.performances__content,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPerformanceModal, {\n      open: newPerformanceModalOpen,\n      setOpen: setNewPerformanceModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n} // New Performance Modal\n\n_s(Performances, \"v+x8x7xuYQbuvXmmRnmL/ujbl5o=\");\n\n_c = Performances;\n\nconst NewPerformanceModal = ({\n  open,\n  setOpen\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"New Performance\",\n    open: open,\n    setOpen: setOpen,\n    cancelText: \"Discard\",\n    submitText: \"Add Performance\",\n    children: \"new performance\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = NewPerformanceModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Performances\");\n$RefreshReg$(_c2, \"NewPerformanceModal\");","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/pages/Performances.js"],"names":["React","useState","Layout","Button","Title","Input","Tabs","Modal","styles","Performances","newPerformanceModalOpen","setNewPerformanceModalOpen","editPerformanceModalOpen","setEditPerformanceModalOpen","performances__navigation","performances__navigation__button","performances__navigation__eventName","performances__header","performances__header__pageTitle","performances__header__search","Search","performances__header__filtersButton","performances__content","NewPerformanceModal","open","setOpen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'; // React\nimport Layout from 'components/Layout'; // Layout wrapper\n\nimport Button from 'components/Button'; // Button\nimport Title from 'components/Title'; // Title\nimport Input from 'components/Input'; // Input\nimport Tabs from 'components/Tabs'; // Tabs\nimport Modal from 'components/Modal'; // Modal\nimport { ReactComponent as BackArrow } from 'assets/back-arrow.svg'; // Back arrow icon\nimport { ReactComponent as Search } from 'assets/search.svg'; // Search icon\nimport { ReactComponent as ChevronDown } from 'assets/chevron-down.svg'; // Chevron down icon\nimport styles from 'styles/pages/Performances.module.css'; // Page styles\n\n// Page: Performances\nexport default function Performances() {\n  const [newPerformanceModalOpen, setNewPerformanceModalOpen] = useState(false);\n  const [editPerformanceModalOpen, setEditPerformanceModalOpen] = useState(false);\n  // const entryContent = <Table></Table>;\n\n  return (\n    <Layout>\n      <div>\n        <div className={styles.performances__navigation}>\n          <Button className={styles.performances__navigation__button} variant=\"outlined\">\n            <BackArrow />\n            Back to Events\n          </Button>\n          <h2 className={styles.performances__navigation__eventName}>\n            {`OSSDF2021- Let's Dis-dance`}\n          </h2>\n        </div>\n        <div className={styles.performances__header}>\n          <Title className={styles.performances__header__pageTitle}>Performances</Title>\n          <Input\n            className={styles.performances__header__search}\n            placeholder=\"Search\"\n            icon={Search}\n          />\n          <Button className={styles.performances__header__filtersButton} variant=\"outlined\">\n            Filters\n            <ChevronDown />\n          </Button>\n          <Button variant=\"contained\">Add Performance</Button>\n        </div>\n        <div className={styles.performances__content}>\n          <Tabs />\n        </div>\n      </div>\n      <NewPerformanceModal open={newPerformanceModalOpen} setOpen={setNewPerformanceModalOpen} />\n    </Layout>\n  );\n}\n\n// New Performance Modal\nconst NewPerformanceModal = ({ open, setOpen }) => {\n  return (\n    <Modal\n      title=\"New Performance\"\n      open={open}\n      setOpen={setOpen}\n      cancelText=\"Discard\"\n      submitText=\"Add Performance\"\n    >\n      new performance\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}