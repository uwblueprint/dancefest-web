{"ast":null,"code":"/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n  var counter = 1;\n  var map = new WeakMap();\n  /**\n   * @borrows {uid}\n   */\n\n  var uid = function (item, index) {\n    if (typeof item === 'number' || typeof item === 'string') {\n      return index ? \"idx-\" + index : \"val-\" + item;\n    }\n\n    if (!map.has(item)) {\n      map.set(item, counter++);\n      return uid(item);\n    }\n\n    return 'uid' + map.get(item);\n  };\n\n  return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\n\nexport var uid = generateUID();","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/node_modules/react-uid/dist/es2015/uid.js"],"names":["generateUID","counter","map","WeakMap","uid","item","index","has","set","get"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,WAAW,GAAG,YAAY;AACjC,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,GAAG,GAAG,IAAIC,OAAJ,EAAV;AACA;AACJ;AACA;;AACI,MAAIC,GAAG,GAAG,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AAC7B,QAAI,OAAOD,IAAP,KAAgB,QAAhB,IACA,OAAOA,IAAP,KAAgB,QADpB,EAC8B;AAC1B,aAAOC,KAAK,GAAG,SAASA,KAAZ,GAAoB,SAASD,IAAzC;AACH;;AACD,QAAI,CAACH,GAAG,CAACK,GAAJ,CAAQF,IAAR,CAAL,EAAoB;AAChBH,MAAAA,GAAG,CAACM,GAAJ,CAAQH,IAAR,EAAcJ,OAAO,EAArB;AACA,aAAOG,GAAG,CAACC,IAAD,CAAV;AACH;;AACD,WAAO,QAAQH,GAAG,CAACO,GAAJ,CAAQJ,IAAR,CAAf;AACH,GAVD;;AAWA,SAAOD,GAAP;AACH,CAlBM;AAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIA,GAAG,GAAGJ,WAAW,EAArB","sourcesContent":["/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n"]},"metadata":{},"sourceType":"module"}