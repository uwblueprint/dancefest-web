{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  color: \", \";\\n\\n  a {\\n    color: \", \";\\n  }\\n  a:hover {\\n    color: \", \";\\n  }\\n  a:active {\\n    color: \", \";\\n  }\\n  a:focus {\\n    outline-color: \", \";\\n  }\\n  h1 {\\n    color: \", \";\\n  }\\n  h2 {\\n    color: \", \";\\n  }\\n  h3 {\\n    color: \", \";\\n  }\\n  h4 {\\n    color: \", \";\\n  }\\n  h5 {\\n    color: \", \";\\n  }\\n  h6 {\\n    color: \", \";\\n  }\\n  small {\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeProvider } from 'styled-components';\nimport exenv from 'exenv';\nimport * as colors from '../colors';\nimport { CHANNEL, DEFAULT_THEME_MODE } from '../constants'; // For forward-compat until everything is upgraded.\n\nimport Theme from './Theme';\n\nfunction getStylesheetResetCSS(backgroundColor) {\n  return \"\\n    body { background: \".concat(backgroundColor, \"; }\\n  \");\n}\n\nfunction buildThemeState(mode) {\n  return {\n    theme: _defineProperty({}, CHANNEL, {\n      mode: mode\n    })\n  };\n}\n\nvar LegacyReset = styled.div(_templateObject(), function (p) {\n  return p.background;\n}, colors.text, colors.link, colors.linkHover, colors.linkActive, colors.linkOutline, colors.heading, colors.heading, colors.heading, colors.heading, colors.heading, colors.subtleHeading, colors.subtleText);\n\nvar AtlaskitThemeProvider = /*#__PURE__*/function (_Component) {\n  _inherits(AtlaskitThemeProvider, _Component);\n\n  var _super = _createSuper(AtlaskitThemeProvider);\n  /**\n   * This function never changes its reference because it accesses\n   * `this` in the function call - thereby sidestepping the need for\n   * creating a new reference everytime theme state changes.\n   * NOTE: When moving to hooks watch out for this regressing.\n   */\n\n\n  function AtlaskitThemeProvider(props) {\n    var _this;\n\n    _classCallCheck(this, AtlaskitThemeProvider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getThemeMode\", function () {\n      return {\n        mode: _this.state.theme[CHANNEL].mode\n      };\n    });\n\n    _this.state = buildThemeState(props.mode);\n    return _this;\n  }\n\n  _createClass(AtlaskitThemeProvider, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        hasAtlaskitThemeProvider: true\n      };\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      if (!this.context.hasAtlaskitThemeProvider && exenv.canUseDOM) {\n        var css = getStylesheetResetCSS(this.props.background(this.state));\n        this.stylesheet = document.createElement('style');\n        this.stylesheet.type = 'text/css';\n        this.stylesheet.innerHTML = css;\n\n        if (document && document.head) {\n          document.head.appendChild(this.stylesheet);\n        }\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(newProps) {\n      if (newProps.mode !== this.props.mode) {\n        var newThemeState = buildThemeState(newProps.mode);\n\n        if (this.stylesheet) {\n          var css = getStylesheetResetCSS(newProps.background(newThemeState));\n          this.stylesheet.innerHTML = css;\n        }\n\n        this.setState(newThemeState);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.stylesheet && document && document.head) {\n        document.head.removeChild(this.stylesheet);\n        delete this.stylesheet;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var theme = this.state.theme;\n      return (\n        /*#__PURE__*/\n\n        /* Wrapping the new provider around the old one provides forward\n        compatibility when using the old provider for styled components. This\n        allows us to use components converted to use the new API with consumers\n        using the old provider along side components that may still be using the\n        old theming API. */\n        React.createElement(Theme.Provider, {\n          value: this.getThemeMode\n        }, /*#__PURE__*/React.createElement(ThemeProvider, {\n          theme: theme\n        }, /*#__PURE__*/React.createElement(LegacyReset, {\n          background: this.props.background\n        }, children)))\n      );\n    }\n  }]);\n\n  return AtlaskitThemeProvider;\n}(Component);\n\n_defineProperty(AtlaskitThemeProvider, \"defaultProps\", {\n  mode: DEFAULT_THEME_MODE,\n  background: colors.background\n});\n\n_defineProperty(AtlaskitThemeProvider, \"childContextTypes\", {\n  hasAtlaskitThemeProvider: PropTypes.bool\n});\n\n_defineProperty(AtlaskitThemeProvider, \"contextTypes\", {\n  hasAtlaskitThemeProvider: PropTypes.bool\n});\n\nexport { AtlaskitThemeProvider as default };","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/node_modules/@atlaskit/theme/dist/esm/components/AtlaskitThemeProvider.js"],"names":["_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_taggedTemplateLiteral","_defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Date","prototype","toString","call","e","_templateObject","data","React","Component","PropTypes","styled","ThemeProvider","exenv","colors","CHANNEL","DEFAULT_THEME_MODE","Theme","getStylesheetResetCSS","backgroundColor","concat","buildThemeState","mode","theme","LegacyReset","div","p","background","text","link","linkHover","linkActive","linkOutline","heading","subtleHeading","subtleText","AtlaskitThemeProvider","_Component","_super","props","_this","state","key","value","getChildContext","hasAtlaskitThemeProvider","UNSAFE_componentWillMount","context","canUseDOM","css","stylesheet","document","createElement","type","innerHTML","head","appendChild","UNSAFE_componentWillReceiveProps","newProps","newThemeState","setState","componentWillUnmount","removeChild","render","children","Provider","getThemeMode","bool","default"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  color: \", \";\\n\\n  a {\\n    color: \", \";\\n  }\\n  a:hover {\\n    color: \", \";\\n  }\\n  a:active {\\n    color: \", \";\\n  }\\n  a:focus {\\n    outline-color: \", \";\\n  }\\n  h1 {\\n    color: \", \";\\n  }\\n  h2 {\\n    color: \", \";\\n  }\\n  h3 {\\n    color: \", \";\\n  }\\n  h4 {\\n    color: \", \";\\n  }\\n  h5 {\\n    color: \", \";\\n  }\\n  h6 {\\n    color: \", \";\\n  }\\n  small {\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeProvider } from 'styled-components';\nimport exenv from 'exenv';\nimport * as colors from '../colors';\nimport { CHANNEL, DEFAULT_THEME_MODE } from '../constants'; // For forward-compat until everything is upgraded.\n\nimport Theme from './Theme';\n\nfunction getStylesheetResetCSS(backgroundColor) {\n  return \"\\n    body { background: \".concat(backgroundColor, \"; }\\n  \");\n}\n\nfunction buildThemeState(mode) {\n  return {\n    theme: _defineProperty({}, CHANNEL, {\n      mode: mode\n    })\n  };\n}\n\nvar LegacyReset = styled.div(_templateObject(), function (p) {\n  return p.background;\n}, colors.text, colors.link, colors.linkHover, colors.linkActive, colors.linkOutline, colors.heading, colors.heading, colors.heading, colors.heading, colors.heading, colors.subtleHeading, colors.subtleText);\n\nvar AtlaskitThemeProvider = /*#__PURE__*/function (_Component) {\n  _inherits(AtlaskitThemeProvider, _Component);\n\n  var _super = _createSuper(AtlaskitThemeProvider);\n\n  /**\n   * This function never changes its reference because it accesses\n   * `this` in the function call - thereby sidestepping the need for\n   * creating a new reference everytime theme state changes.\n   * NOTE: When moving to hooks watch out for this regressing.\n   */\n  function AtlaskitThemeProvider(props) {\n    var _this;\n\n    _classCallCheck(this, AtlaskitThemeProvider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getThemeMode\", function () {\n      return {\n        mode: _this.state.theme[CHANNEL].mode\n      };\n    });\n\n    _this.state = buildThemeState(props.mode);\n    return _this;\n  }\n\n  _createClass(AtlaskitThemeProvider, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        hasAtlaskitThemeProvider: true\n      };\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      if (!this.context.hasAtlaskitThemeProvider && exenv.canUseDOM) {\n        var css = getStylesheetResetCSS(this.props.background(this.state));\n        this.stylesheet = document.createElement('style');\n        this.stylesheet.type = 'text/css';\n        this.stylesheet.innerHTML = css;\n\n        if (document && document.head) {\n          document.head.appendChild(this.stylesheet);\n        }\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(newProps) {\n      if (newProps.mode !== this.props.mode) {\n        var newThemeState = buildThemeState(newProps.mode);\n\n        if (this.stylesheet) {\n          var css = getStylesheetResetCSS(newProps.background(newThemeState));\n          this.stylesheet.innerHTML = css;\n        }\n\n        this.setState(newThemeState);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.stylesheet && document && document.head) {\n        document.head.removeChild(this.stylesheet);\n        delete this.stylesheet;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var theme = this.state.theme;\n      return (\n        /*#__PURE__*/\n\n        /* Wrapping the new provider around the old one provides forward\n        compatibility when using the old provider for styled components. This\n        allows us to use components converted to use the new API with consumers\n        using the old provider along side components that may still be using the\n        old theming API. */\n        React.createElement(Theme.Provider, {\n          value: this.getThemeMode\n        }, /*#__PURE__*/React.createElement(ThemeProvider, {\n          theme: theme\n        }, /*#__PURE__*/React.createElement(LegacyReset, {\n          background: this.props.background\n        }, children)))\n      );\n    }\n  }]);\n\n  return AtlaskitThemeProvider;\n}(Component);\n\n_defineProperty(AtlaskitThemeProvider, \"defaultProps\", {\n  mode: DEFAULT_THEME_MODE,\n  background: colors.background\n});\n\n_defineProperty(AtlaskitThemeProvider, \"childContextTypes\", {\n  hasAtlaskitThemeProvider: PropTypes.bool\n});\n\n_defineProperty(AtlaskitThemeProvider, \"contextTypes\", {\n  hasAtlaskitThemeProvider: PropTypes.bool\n});\n\nexport { AtlaskitThemeProvider as default };"]},"metadata":{},"sourceType":"module"}