{"ast":null,"code":"var _jsxFileName = \"/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/components/Button.js\";\nimport React from 'react'; // React\n\nimport PropTypes from 'prop-types'; // PropTypes\n\nimport { ReactComponent as Edit } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/edit.svg\"; // Edit Icon\n\nimport styles from 'styles/components/Button.module.css'; // Component styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button({\n  className,\n  children,\n  variant,\n  ...props\n}) {\n  switch (variant) {\n    case 'edit':\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.button__edit} ${className}`,\n        ...props,\n        children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n\n    case 'outlined':\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.button} ${styles.button__outlined} ${className}`,\n        ...props,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.button} ${styles.button__contained} ${className}`,\n        ...props,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n  }\n}\n_c = Button;\nButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['outlined', 'contained', 'edit'])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/src/components/Button.js"],"names":["React","PropTypes","styles","Button","className","children","variant","props","button__edit","button","button__outlined","button__contained","propTypes","any","string","oneOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;8FAEsB;;AAC1D,OAAOC,MAAP,MAAmB,qCAAnB,C,CAA0D;;;AAE1D,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,OAAvB;AAAgC,KAAGC;AAAnC,CAAhB,EAA4D;AACzE,UAAQD,OAAR;AACE,SAAK,MAAL;AACE,0BACE;AAAQ,QAAA,SAAS,EAAG,GAAEJ,MAAM,CAACM,YAAa,IAAGJ,SAAU,EAAvD;AAAA,WAA8DG,KAA9D;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;;AAKF,SAAK,UAAL;AACE,0BACE;AAAQ,QAAA,SAAS,EAAG,GAAEL,MAAM,CAACO,MAAO,IAAGP,MAAM,CAACQ,gBAAiB,IAAGN,SAAU,EAA5E;AAAA,WAAmFG,KAAnF;AAAA,kBACGF;AADH;AAAA;AAAA;AAAA;AAAA,cADF;;AAKF;AACE,0BACE;AAAQ,QAAA,SAAS,EAAG,GAAEH,MAAM,CAACO,MAAO,IAAGP,MAAM,CAACS,iBAAkB,IAAGP,SAAU,EAA7E;AAAA,WAAoFG,KAApF;AAAA,kBACGF;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAdJ;AAoBD;KArBuBF,M;AAuBxBA,MAAM,CAACS,SAAP,GAAmB;AACjBP,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,GADH;AAEjBT,EAAAA,SAAS,EAAEH,SAAS,CAACa,MAFJ;AAGjBR,EAAAA,OAAO,EAAEL,SAAS,CAACc,KAAV,CAAgB,CAAC,UAAD,EAAa,WAAb,EAA0B,MAA1B,CAAhB;AAHQ,CAAnB","sourcesContent":["import React from 'react'; // React\nimport PropTypes from 'prop-types'; // PropTypes\n\nimport { ReactComponent as Edit } from 'assets/edit.svg'; // Edit Icon\nimport styles from 'styles/components/Button.module.css'; // Component styles\n\nexport default function Button({ className, children, variant, ...props }) {\n  switch (variant) {\n    case 'edit':\n      return (\n        <button className={`${styles.button__edit} ${className}`} {...props}>\n          <Edit />\n        </button>\n      );\n    case 'outlined':\n      return (\n        <button className={`${styles.button} ${styles.button__outlined} ${className}`} {...props}>\n          {children}\n        </button>\n      );\n    default:\n      return (\n        <button className={`${styles.button} ${styles.button__contained} ${className}`} {...props}>\n          {children}\n        </button>\n      );\n  }\n}\n\nButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['outlined', 'contained', 'edit']),\n};\n"]},"metadata":{},"sourceType":"module"}