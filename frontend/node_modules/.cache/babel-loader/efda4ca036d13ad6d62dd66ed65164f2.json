{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { createTheme } from '@atlaskit/theme/components';\nimport { getCss } from '../shared/css';\nvar stateToSelectorMap = {\n  focus: '&:focus',\n  focusSelected: '&:focus',\n  hover: '&:hover',\n  active: '&:active',\n  disabled: '&[disabled]'\n}; // Mapping the new clean css back to the legacy theme format.\n// The legacy theme format has all styles at the top level (no nested selectors)\n// and uses `getSpecifiers()` to apply the style to all psudeo states\n\nexport function getCustomCss(_ref) {\n  var _ref$appearance = _ref.appearance,\n      appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 'default' : _ref$spacing,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'light' : _ref$mode,\n      _ref$isSelected = _ref.isSelected,\n      isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,\n      _ref$shouldFitContain = _ref.shouldFitContainer,\n      shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain,\n      _ref$iconIsOnlyChild = _ref.iconIsOnlyChild,\n      iconIsOnlyChild = _ref$iconIsOnlyChild === void 0 ? false : _ref$iconIsOnlyChild,\n      _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      state = _ref.state;\n  var result = getCss({\n    appearance: appearance,\n    spacing: spacing,\n    mode: mode,\n    isSelected: isSelected,\n    shouldFitContainer: shouldFitContainer,\n    isOnlySingleIcon: iconIsOnlyChild\n  }); // we need to disable the default browser focus styles always\n  // this is because we are not expressing that we can have two pesduo states at a time\n\n  result.outline = 'none'; // Pulling relevant styles up to the top level\n\n  var selector = stateToSelectorMap[state];\n\n  if (selector) {\n    result = _objectSpread(_objectSpread({}, result), result[selector]);\n  }\n\n  if (isLoading) {\n    result = _objectSpread(_objectSpread({}, result), result['&[data-has-overlay=\"true\"]']);\n  } // Delete all selectors and just keep root styles\n\n\n  Object.keys(result).forEach(function (key) {\n    // want to keep this one\n    if (key === '&::-moz-focus-inner') {\n      return;\n    } // Not using .startsWith for ie11\n\n\n    if (key.indexOf('&') === 0) {\n      delete result[key];\n    }\n  });\n  return result;\n} // This styling approach works by generating a 'style' and applying with maximum specificity\n// To do this we are overwriting all psuedo selectors\n\nexport function getSpecifiers(styles) {\n  return {\n    '&, &:hover, &:active, &:focus, &:visited, &:disabled, &[disabled]': styles\n  };\n}\nexport function defaultThemeFn(current, values) {\n  return current(values);\n}\nvar Theme = createTheme(function (themeProps) {\n  return {\n    buttonStyles: getCustomCss(themeProps),\n    // No styles being applied directly to spinner by default\n    // Keeping this for legacy compat. We could remove it, but given\n    // that we are changing theme soon there is no point\n    spinnerStyles: {}\n  };\n});\nexport default Theme;","map":{"version":3,"sources":["/Users/oustan/Documents/PROJECTS/dancefest-web/frontend/node_modules/@atlaskit/button/dist/esm/custom-theme-button/theme.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","createTheme","getCss","stateToSelectorMap","focus","focusSelected","hover","active","disabled","getCustomCss","_ref","_ref$appearance","appearance","_ref$spacing","spacing","_ref$mode","mode","_ref$isSelected","isSelected","_ref$shouldFitContain","shouldFitContainer","_ref$iconIsOnlyChild","iconIsOnlyChild","_ref$isLoading","isLoading","state","result","isOnlySingleIcon","outline","selector","indexOf","getSpecifiers","styles","defaultThemeFn","current","values","Theme","themeProps","buttonStyles","spinnerStyles"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uCAA5B;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAErB,QAAAA,eAAe,CAACe,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;AAAEjB,MAAAA,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASU,WAAT,QAA4B,4BAA5B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,IAAIC,kBAAkB,GAAG;AACvBC,EAAAA,KAAK,EAAE,SADgB;AAEvBC,EAAAA,aAAa,EAAE,SAFQ;AAGvBC,EAAAA,KAAK,EAAE,SAHgB;AAIvBC,EAAAA,MAAM,EAAE,UAJe;AAKvBC,EAAAA,QAAQ,EAAE;AALa,CAAzB,C,CAMG;AACH;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACjC,MAAIC,eAAe,GAAGD,IAAI,CAACE,UAA3B;AAAA,MACIA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,SAA7B,GAAyCA,eAD1D;AAAA,MAEIE,YAAY,GAAGH,IAAI,CAACI,OAFxB;AAAA,MAGIA,OAAO,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,SAA1B,GAAsCA,YAHpD;AAAA,MAIIE,SAAS,GAAGL,IAAI,CAACM,IAJrB;AAAA,MAKIA,IAAI,GAAGD,SAAS,KAAK,KAAK,CAAnB,GAAuB,OAAvB,GAAiCA,SAL5C;AAAA,MAMIE,eAAe,GAAGP,IAAI,CAACQ,UAN3B;AAAA,MAOIA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,KAA7B,GAAqCA,eAPtD;AAAA,MAQIE,qBAAqB,GAAGT,IAAI,CAACU,kBARjC;AAAA,MASIA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBATpE;AAAA,MAUIE,oBAAoB,GAAGX,IAAI,CAACY,eAVhC;AAAA,MAWIA,eAAe,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,KAAlC,GAA0CA,oBAXhE;AAAA,MAYIE,cAAc,GAAGb,IAAI,CAACc,SAZ1B;AAAA,MAaIA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,KAA5B,GAAoCA,cAbpD;AAAA,MAcIE,KAAK,GAAGf,IAAI,CAACe,KAdjB;AAeA,MAAIC,MAAM,GAAGxB,MAAM,CAAC;AAClBU,IAAAA,UAAU,EAAEA,UADM;AAElBE,IAAAA,OAAO,EAAEA,OAFS;AAGlBE,IAAAA,IAAI,EAAEA,IAHY;AAIlBE,IAAAA,UAAU,EAAEA,UAJM;AAKlBE,IAAAA,kBAAkB,EAAEA,kBALF;AAMlBO,IAAAA,gBAAgB,EAAEL;AANA,GAAD,CAAnB,CAhBiC,CAuB7B;AACJ;;AAEAI,EAAAA,MAAM,CAACE,OAAP,GAAiB,MAAjB,CA1BiC,CA0BR;;AAEzB,MAAIC,QAAQ,GAAG1B,kBAAkB,CAACsB,KAAD,CAAjC;;AAEA,MAAII,QAAJ,EAAc;AACZH,IAAAA,MAAM,GAAGpC,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKoC,MAAL,CAAd,EAA4BA,MAAM,CAACG,QAAD,CAAlC,CAAtB;AACD;;AAED,MAAIL,SAAJ,EAAe;AACbE,IAAAA,MAAM,GAAGpC,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKoC,MAAL,CAAd,EAA4BA,MAAM,CAAC,4BAAD,CAAlC,CAAtB;AACD,GApCgC,CAoC/B;;;AAGF7C,EAAAA,MAAM,CAACD,IAAP,CAAY8C,MAAZ,EAAoB9B,OAApB,CAA4B,UAAUC,GAAV,EAAe;AACzC;AACA,QAAIA,GAAG,KAAK,qBAAZ,EAAmC;AACjC;AACD,KAJwC,CAIvC;;;AAGF,QAAIA,GAAG,CAACiC,OAAJ,CAAY,GAAZ,MAAqB,CAAzB,EAA4B;AAC1B,aAAOJ,MAAM,CAAC7B,GAAD,CAAb;AACD;AACF,GAVD;AAWA,SAAO6B,MAAP;AACD,C,CAAC;AACF;;AAEA,OAAO,SAASK,aAAT,CAAuBC,MAAvB,EAA+B;AACpC,SAAO;AACL,yEAAqEA;AADhE,GAAP;AAGD;AACD,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,MAAjC,EAAyC;AAC9C,SAAOD,OAAO,CAACC,MAAD,CAAd;AACD;AACD,IAAIC,KAAK,GAAGnC,WAAW,CAAC,UAAUoC,UAAV,EAAsB;AAC5C,SAAO;AACLC,IAAAA,YAAY,EAAE7B,YAAY,CAAC4B,UAAD,CADrB;AAEL;AACA;AACA;AACAE,IAAAA,aAAa,EAAE;AALV,GAAP;AAOD,CARsB,CAAvB;AASA,eAAeH,KAAf","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createTheme } from '@atlaskit/theme/components';\nimport { getCss } from '../shared/css';\nvar stateToSelectorMap = {\n  focus: '&:focus',\n  focusSelected: '&:focus',\n  hover: '&:hover',\n  active: '&:active',\n  disabled: '&[disabled]'\n}; // Mapping the new clean css back to the legacy theme format.\n// The legacy theme format has all styles at the top level (no nested selectors)\n// and uses `getSpecifiers()` to apply the style to all psudeo states\n\nexport function getCustomCss(_ref) {\n  var _ref$appearance = _ref.appearance,\n      appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 'default' : _ref$spacing,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'light' : _ref$mode,\n      _ref$isSelected = _ref.isSelected,\n      isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,\n      _ref$shouldFitContain = _ref.shouldFitContainer,\n      shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain,\n      _ref$iconIsOnlyChild = _ref.iconIsOnlyChild,\n      iconIsOnlyChild = _ref$iconIsOnlyChild === void 0 ? false : _ref$iconIsOnlyChild,\n      _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      state = _ref.state;\n  var result = getCss({\n    appearance: appearance,\n    spacing: spacing,\n    mode: mode,\n    isSelected: isSelected,\n    shouldFitContainer: shouldFitContainer,\n    isOnlySingleIcon: iconIsOnlyChild\n  }); // we need to disable the default browser focus styles always\n  // this is because we are not expressing that we can have two pesduo states at a time\n\n  result.outline = 'none'; // Pulling relevant styles up to the top level\n\n  var selector = stateToSelectorMap[state];\n\n  if (selector) {\n    result = _objectSpread(_objectSpread({}, result), result[selector]);\n  }\n\n  if (isLoading) {\n    result = _objectSpread(_objectSpread({}, result), result['&[data-has-overlay=\"true\"]']);\n  } // Delete all selectors and just keep root styles\n\n\n  Object.keys(result).forEach(function (key) {\n    // want to keep this one\n    if (key === '&::-moz-focus-inner') {\n      return;\n    } // Not using .startsWith for ie11\n\n\n    if (key.indexOf('&') === 0) {\n      delete result[key];\n    }\n  });\n  return result;\n} // This styling approach works by generating a 'style' and applying with maximum specificity\n// To do this we are overwriting all psuedo selectors\n\nexport function getSpecifiers(styles) {\n  return {\n    '&, &:hover, &:active, &:focus, &:visited, &:disabled, &[disabled]': styles\n  };\n}\nexport function defaultThemeFn(current, values) {\n  return current(values);\n}\nvar Theme = createTheme(function (themeProps) {\n  return {\n    buttonStyles: getCustomCss(themeProps),\n    // No styles being applied directly to spinner by default\n    // Keeping this for legacy compat. We could remove it, but given\n    // that we are changing theme soon there is no point\n    spinnerStyles: {}\n  };\n});\nexport default Theme;"]},"metadata":{},"sourceType":"module"}